import telebot
from info import TOKEN
import db_handler as db
from releases import get_releases_list

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
bot = telebot.TeleBot(TOKEN)


# genre keyboard
def get_genre_update_keyboard(chat_id):
    keyboard = telebot.types.InlineKeyboardMarkup()
    for genre in db.genres_set:
        keyboard.row(
            telebot.types.InlineKeyboardButton(
                '‚úÖ' + genre if genre in db.get_selected_genres_list(chat_id) else genre,
                callback_data=genre
            )
        )
    keyboard.row(
        telebot.types.InlineKeyboardButton(
            'üóëÔ∏è–°–±—Ä–æ—Å–∏—Ç—å –∂–∞–Ω—Ä—ãüóëÔ∏è',
            callback_data='reset_genres'
        )
    )

    return keyboard


# news
def news(message):
    releases_list = get_releases_list()
    result = '–ü—Ä–µ–º—å–µ—Ä—ã —Ñ–∏–ª—å–º–æ–≤ –≤ –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–∞—Ö –†–æ—Å—Å–∏–∏:'
    for i, film in enumerate(releases_list):
        result += f"\n{i+1}. {film['title']} ({film['year']})" \
                  f"\n({', '.join(film['genres'])})"
    bot.send_message(message.chat.id, result)


def random_movie(message, genres_table_name, years_table_name):
    film = db.get_random_movie_by_genre(db.get_selected_genres_list(message.chat.id), genres_table_name)
    bot.send_message(message.chat.id, '–ö–∞–∫ –Ω–∞—Å—á—ë—Ç...\n'
                                      f'"{film}" ({db.get_movie_year(film, years_table_name)})\n–ñ–∞–Ω—Ä—ã: ' +
                     ', '.join(db.get_movie_genres_list(film, genres_table_name))
                     if film else '–ü—Ä–æ—Å—Ç–∏—Ç–µ! –Ø –Ω–µ –º–æ–≥—É –Ω–∏—á–µ–≥–æ –ø–æ—Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞—Ç—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–∏–µ –∂–∞–Ω—Ä—ã')


# –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º, –∏—Å—Ö–æ–¥—è –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∂–∞–Ω—Ä–æ–≤
def random_film(message):
    random_movie(message, db.movies_genres_table_name, db.movies_years_table_name)


# random_series
def random_series(message):
    random_movie(message, db.series_genres_table_name, db.series_years_table_name)


# –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ –∂–∞–Ω—Ä–∞
def genres(message):
    bot.send_message(
        message.chat.id, '–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–µ –∂–∞–Ω—Ä—ã –∏–∑ —Å–ø–∏—Å–∫–∞. '
                         '–û–Ω–∏ –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∞–º –∫–æ–Ω—Ç–µ–Ω—Ç–∞:',
        reply_markup=get_genre_update_keyboard(message.chat.id)
    )


# info
def info(message):
    bot.send_message(message.chat.id,
                     '–ß—Ç–æ–±—ã –≤–∞–º –ø–æ—Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–ª–∏ —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º / —Å–µ—Ä–∏–∞–ª, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∫–Ω–æ–ø–∫–∏ –≤–æ '
                     '–≤—Å–ø–ª—ã–≤–∞—é—â–µ–º –º–µ–Ω—é!\n–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —Ç–æ—á–Ω–µ–µ, —É–∫–∞–∑–∞–≤ —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã—Ö'
                     ' –∂–∞–Ω—Ä–æ–≤ (–≤—ã, –∫–æ–Ω–µ—á–Ω–æ, –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å —Ç–∞–º —Å—Ç–æ–ª—å–∫–æ –∂–∞–Ω—Ä–æ–≤, —Å–∫–æ–ª—å–∫–æ –∑–∞—Ö–æ—Ç–∏—Ç–µ, '
                     '–Ω–æ –ª—É—á—à–µ –æ–≥—Ä–∞–Ω–∏—á—å—Ç–µ—Å—å –¥–≤—É–º—è-—Ç—Ä–µ–º—è. –¢–∞–∫ –±–æ–ª—å—à–µ —à–∞–Ω—Å–æ–≤ –Ω–∞–π—Ç–∏ —á—Ç–æ-—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ). –î–ª—è —ç—Ç–æ–≥–æ '
                     '–ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ ¬´–ñ–∞–Ω—Ä—ã üíé!¬ª')


menu = {'news': '–ß—Ç–æ –Ω–æ–≤–æ–≥–æ üîé', 'random_film': '–°–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º üçø',
        'random_series': '–°–ª—É—á–∞–π–Ω—ã–π —Å–µ—Ä–∏–∞–ª üì∫', 'genres': '–ñ–∞–Ω—Ä—ã üíé',
        'info': '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è üìñ'}

menu_functions = {menu['news']: news, menu['random_film']: random_film,
                  menu['random_series']: random_series, menu['genres']: genres,
                  menu['info']: info}


# –ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–≥–æ —Å–ø–∏—Å–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∂–∞–Ω—Ä–æ–≤
def edit_genres_keyboard(query):
    if query.message:
        bot.edit_message_reply_markup(
            query.message.chat.id,
            query.message.message_id,
            reply_markup=get_genre_update_keyboard(query.message.chat.id)
        )
    elif query.inline_message_id:
        bot.edit_message_reply_markup(
            inline_message_id=query.inline_message_id,
            reply_markup=get_genre_update_keyboard(query.message.chat.id)
        )


@bot.callback_query_handler(func=lambda call: True)
def callback(query):
    if query.data in db.genres_set:
        bot.answer_callback_query(query.id)  # —É–±–∏—Ä–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–º–µ –∑–∞–≥—Ä—É–∑–∫–∏
        if query.data in db.get_selected_genres_list(query.message.chat.id):
            db.remove_genre(query.message.chat.id, query.data)
        else:
            db.add_genre(query.message.chat.id, query.data)
        edit_genres_keyboard(query)
    elif query.data == 'reset_genres':
        db.reset_genres(query.message.chat.id)
        edit_genres_keyboard(query)


# –§—É–Ω–∫—Ü–∏—è, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∞—è –∫–æ–º–∞–Ω–¥—É /start
@bot.message_handler(commands=["start"])
def start(message):
    reply_keyboard = telebot.types.ReplyKeyboardMarkup()
    reply_keyboard.row(
        telebot.types.KeyboardButton(menu['news'])
    )
    reply_keyboard.row(
        telebot.types.KeyboardButton(menu['random_film']),
        telebot.types.KeyboardButton(menu['random_series'])
    )
    reply_keyboard.row(
        telebot.types.KeyboardButton(menu['genres'])
    )
    reply_keyboard.row(
        telebot.types.KeyboardButton(menu['info'])
    )
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!', reply_markup=reply_keyboard)


# –§—É–Ω–∫—Ü–∏—è, –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É—é—â–∞—è —Å –≤–≤–æ–¥–∏–º—ã–º —Ç–µ–∫—Å—Ç–æ–º
@bot.message_handler(content_types='text')
def text_handler(message):
    if message.text in menu.values():
        try:
            menu_functions[message.text](message)
        except Exception as ex:
            print(ex)


# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
bot.polling(none_stop=True, interval=1)
